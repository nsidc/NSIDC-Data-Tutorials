name: Test Notebooks

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  mamba-forge:
    name: Runtime (${{ matrix.os }}, Mambaforge)
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu", "macos", "windows"]
        include:
          - os: ubuntu
            environment-file: binder/conda-linux-64.lock
            miniforge-variant: Mambaforge
            miniforge-version: latest
          - os: macos
            environment-file: binder/conda-osx-64.lock
            miniforge-variant: Mambaforge
            miniforge-version: latest
          - os: windows
            environment-file: binder/conda-win-64.lock
            miniforge-variant: Mambaforge
            miniforge-version: latest
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          environment-file: ${{ matrix.environment-file }}
          miniforge-variant: ${{ matrix.miniforge-variant }}
          miniforge-version: ${{ matrix.miniforge-version }}
          use-mamba: true

      - name: Bash
        shell: bash -l {0}
        run: |
          conda info
          conda list
          conda config --show-sources
          conda config --show
          printenv | sort

      - name: PowerShell
        shell: powershell
        run: |
          conda info
          conda list

      - name: PowerShell Core
        shell: pwsh
        run: |
          conda info
          conda list
      - name: Cmd.exe
        shell: cmd /C CALL {0}
        run: >-
          conda info && conda list
